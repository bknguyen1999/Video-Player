
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">
    <!-- <link rel="icon" href="../../favicon.ico">-->

    <title>Brandon's Video Player</title>

    <!-- Bootstrap core CSS -->
    <link href="css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="css/main.css" rel="stylesheet">

  </head>

  <body>

    <nav class="navbar navbar-inverse navbar-fixed-top">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#">Video Player</a>
        </div>
        <div id="navbar" class="collapse navbar-collapse">
          <ul class="nav navbar-nav">
            <li class="active"><a href="#wan">Button1</a></li>
            <li><a href="#too">Button2</a></li>
            <li><a href="#phree">Button3</a></li>
          </ul>
        </div><!--/.nav-collapse -->
      </div>
    </nav>

    <div class="container">

      <div class="starter-template">
        <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
        <div id="player"></div>

        <div id = 'controls'>
          <div id = 'buttongroup' style ="float:left;">        
            <button id = 'play_pause' type="button" class="btn btn-default" onclick = "configPlayPauseButton()">Play</button>
          </div>
          <div class="progresscontainer" style = "float:left">
            <input type="range" min="0" max="100" value="0" class="progress" id="progressbar" onchange = "sendSeekRequest()">
          </div>
          <div id = 'timestampcontainer' style = "float: left;">
            <label id = 'timestamp' class = "time"></label>
          </div>
          <div class="slidecontainer">
            <input type="range" min="0" max="100" value="50" class="slider" id="volume" onchange="controlVolume()">
          </div>
        </div>

        <script>
          function initializeControls(){
            var progressBar = document.getElementById("progressbar");
            var timestamp = document.getElementById("timestamp");
            //var slider_handle = document.getElementById("progress::-webkit-slider-thumb");
            setInterval(function(){
              if(player == null || progressBar == null){
                return;
              }
              //console.log(player.getCurrentTime());
              var fraction = player.getCurrentTime() / player.getDuration() *100;
              progressBar.value = fraction;
              var curTime = fancyTimeFormat(player.getCurrentTime());
              var totalTime = fancyTimeFormat(player.getDuration());
              timestamp.textContent = curTime + " / " + totalTime;
            }, 200);
          }
          


          function sendPlayRequest(){
            var button = document.getElementById("play_pause");
            button.textContent = 'Pause'
            var data = {state: 'play', time: player.getCurrentTime()};
            socket.emit('playerEvent', data);
          }
          function sendPauseRequest(){
            var button = document.getElementById("play_pause");
            button.textContent = 'Play';
            var data = {state: 'paused', time: player.getCurrentTime()};
            socket.emit('playerEvent', data);
          }
          function sendEndRequest(){
            var data = {state: 'ended', time: player.getCurrentTime()};
            socket.emit('playerEvent', data);
          }
          
          function sendSeekRequest(){
            var progressBar = document.getElementById("progressbar");
            var seek_time = (progressBar.value / 100) * player.getDuration();
            var data = {state: 'seek', time: seek_time};
            socket.emit('playerEvent', data)
          }

          function controlVolume(){
            var slider = document.getElementById("volume");
            console.log(slider.value);
            player.setVolume(slider.value);
          }

          function configPlayPauseButton(){
            var button = document.getElementById("play_pause");
            if (player.getPlayerState() == 1){
              sendPauseRequest();
            }
            else if (player.getPlayerState() == 2){
              sendPlayRequest();
            }
          }
          
          function fancyTimeFormat(duration){   
              // Hours, minutes and seconds
              var hrs = Math.floor(duration / 3600);
              var mins = Math.floor((duration % 3600) / 60);
              var secs = Math.floor(duration % 60);

              // Output like "1:01" or "4:03:59" or "123:03:59"
              var ret = "";

              if (hrs > 0) {
                  ret += "" + hrs + ":" + (mins < 10 ? "0" : "");
              }

              ret += "" + mins + ":" + (secs < 10 ? "0" : "");
              ret += "" + secs;
              return ret;
          }
          
        </script>

        <script>
          // 2. This code loads the IFrame Player API code asynchronously.
          var tag = document.createElement('script');

          tag.src = "https://www.youtube.com/iframe_api";
          var firstScriptTag = document.getElementsByTagName('script')[0];
          firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

          // 3. This function creates an <iframe> (and YouTube player)
          //    after the API code downloads.
          var player;
          function onYouTubeIframeAPIReady() {
            initializeControls();
            player = new YT.Player('player', {
              height: '480',
              width: '720',
              videoId: 'uJ6L4-F4zbg',
              events: {
                'onReady': onPlayerReady,
                'onStateChange': onPlayerStateChange
              },
              playerVars:{
                'controls': 0,
                'modestbranding': 1,
                'rel': 0,
                'showinfo': 0,
              }
            });
          }

          // 4. The API will call this function when the video player is ready.
          function onPlayerReady(event) {
            socket.emit('connection', "new user connected");
            event.target.playVideo();
            
            
          }

          // 5. The API calls this function when the player's state changes.
          //    The function indicates that when playing a video (state=1),
          //    the player should play for six seconds and then stop.

          //var done = false;
          function onPlayerStateChange(event) {
            if(player.getPlayerState() == 1){ // playing
              sendPlayRequest();
            }
            else if(player.getPlayerState() == 2){ // paused
              sendPauseRequest();
            }
            else if(player.getPlayerState() == 0){ // ended
              sendEndRequest();
            }
          }

        
          function stopVideo() {
            player.stopVideo();
          }

          function playVideo(){
            player.playVideo();
          }

          function pauseVideo(){
            player.pauseVideo();
          }

          function seekTo(time){
            player.seekTo(time);
          }


        </script>





        <div class = 'chatboxcontainer' >
          <head>
            <meta charset="utf-8" />
            <meta name="description" content="Tuts+ Chat Application" />
            <link rel="stylesheet" href="style.css" />
          </head>
          <body>
              <div id="wrapper">
                  <div id="menu">
                      Your name:<input class="nameinput" id="nameinput"> <b></b>
                      <button class="logout"><a id="confirmname" href="#"  type = "button" onclick="confirmName()">Confirm</a></button>
                  </div>

                  <div id="chatbox"></div>

                  <form name="message" action="">
                      <input name="usermsg" type="text" id="usermsg" />
                      <button name="submitmsg" type="button" id="submitmsg" onclick = "sendMessage()">Send</button>
                  </form>
              </div>
              <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
              <script type="text/javascript">
                  // jQuery Document
                  $(document).ready(function () {});
              </script>
          </body>
        </div>

        <script>
          var user_name = null;
          var name_input = document.getElementById("nameinput");
          var confirm_button = document.getElementById("confirmname");
          var sendButton = document.getElementById("submitmsg");
          var message = document.getElementById("usermsg");

          function confirmName(){
            if(name_input.value){
              user_name = name_input.value;
            }
           
          }

          name_input.addEventListener("keyup", function(event){
            if(event.keyCode === 13){
              event.preventDefault();
              confirm_button.click();
            }
          });

          message.addEventListener("keyup", function(event){
            if(event.keyCode === 13){
              event.preventDefault();
              sendButton.click();
            }
          });

          function sendMessage(){
            //console.log(sendButton);
            if(message.value && user_name != null){
              var data = {sender: user_name, msg: message.value};
              socket.emit('chat message', data);
              message.value = '';
            }
          }

        </script>
      
      </div>

    </div><!-- /.container -->


    


    

  

    <!-- Setting up sockets -->
    <script src="/socket.io/socket.io.js"></script>
    <script>
      var socket = io();
      socket.on('playerEvent', function(msg){
        if (msg.state == 'play'){
          //console.log('in here');
          if(Math.abs(msg.time - player.getCurrentTime() > 1)){
            seekTo(msg.time);
          }
          playVideo();
        }
        else if (msg.state == 'paused'){
          //console.log('in here 2');
          pauseVideo();
        }
        else if (msg.state == 'ended'){
          //console.log('in here 3');
          stopVideo();
        }
        else if (msg.state == 'seek'){
          seekTo(msg.time);
        }
      });

      socket.on('connection', function(msg){
        if(player){
          console.log('new connection');
          seekTo(player.getCurrentTime());
          playVideo();
        }
      });

      socket.on('chat message', function(msg){
        var chatbox = document.getElementById("chatbox");
        var item = document.createElement('ul');
        item.textContent = msg.sender + ": " + msg.msg;
        chatbox.appendChild(item);
        chatbox.scrollTo(0, document.body.scrollHeight);
      });

    </script>


    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script>window.jQuery || document.write('<script src="js/jquery.min.js"><\/script>')</script>
    <script src="js/bootstrap.min.js"></script>
  
  </body>
</html>
